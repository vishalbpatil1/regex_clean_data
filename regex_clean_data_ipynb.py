# -*- coding: utf-8 -*-
"""regex_clean_data_ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_AZe3kuUumTRoehVgEWS4VuwoO5gS65g
"""

import re

"""```
## Metacharacters are characters with a special meaning:
[]	A set of characters	      "[a-m]"

\	Signals a special sequence (can also be used to escape special characters)	"\d"

.	Any character (except newline character)	"he..o"

^	Starts with	"^hello"


$	Ends with	"world$"

*	Zero or more occurrences	"aix*"

+	One or more occurrences	"aix+"

{}	Exactly the specified number of occurrences	"al{2}"


|	Either or	"falls|stays"

()	Capture and group

```

```bash
[^arn]	Returns a match for any character EXCEPT a, r, and n


[0123]	Returns a match where any of the specified digits (0, 1, 2, or 3) are present


[0-9]	Returns a match for any digit between 0 and 9

[0-5][0-9]	Returns a match for any two-digit numbers from 00 and 59

[a-zA-Z]	Returns a match for any character alphabetically between a and z, lower case OR upper case


[+]	In sets, +, *, ., |, (), $,{} has no special meaning, so [+] means: return a match for any + character in the string

```
"""

txt = "The rain in Spain"   #The findall() function returns a list containing all matches.
x = re.findall("ai", txt)
print(x)

txt = "The rain in Spain"  #Return an empty list if no match was found:
x = re.findall("ais", txt)
print(x)

Words = 'the quick brownTfox runs super! fast: '  
 #split on the ‘T’, ‘!’ and the ‘:’ 
split = re.split('T|!|:',Words)
print(split)

p = re.compile('[a-e]')
p.findall("Aye, said Mr. Gibenson Stark")

# \d is equivalent to [0-9].
p = re.compile('\d')
print(p.findall("I went to him at 11 A.M. on 4th July 1886"))

# \d+ will match a group on [0-9], group of one or greater size
p = re.compile('\d+')
print(p.findall("I went to him at 11 A.M. on 4th July 1886"))
p = re.compile('[0-9]+')
print(p.findall("I went to him at 11 A.M. on 4th July 1886"))

# \w is equivalent to [a-zA-Z0-9_].
p = re.compile('\w')
print(p.findall("He said * in some_lang."))
p = re.compile('[a-zA-Z0-9_]')
print(p.findall("He said * in some_lang."))

# \w+ matches to group of alphanumeric character.
p = re.compile('\w+')
print(p.findall("I went to him at 11 A.M., he said *** in some_language."))

p = re.compile('[a-zA-Z0-9_]+')
print(p.findall("I went to him at 11 A.M., he said *** in some_language."))

# \W matches to non alphanumeric characters.
p = re.compile('\W')
print(p.findall("he said *** in some_language."))

# '*' replaces the no. of occurrence of a character.
p = re.compile('ab*')
print(p.findall("ababbaabbb"))

from re import split
print(split('\W+', 'On 12th Jan 2016, at 11:02 AM'))

# Upon matching, 'ub' is replaced by '~*' in "Subject", and in "Uber", 'Ub' is replaced.
print(re.sub('ub', '~*' , 'Subject has Uber booked already', flags = re.IGNORECASE))

# Upon matching, '$' is replaced by '' .
pattern=r'[$_]'
result=re.sub(pattern, '' ,'$4521$_')
result

# Upon matching, '$' is replaced by '' .
pattern=re.compile('[0-9]+')
result=pattern.findall('$4521$_')
result[0]

phone = re.compile('\d{3}\-\d{3}\-\d{4}')
# Check if the pattern matches
result = phone.findall("my phone number is 123-456-7890 pleas call me.")
result

# Find the numeric values: matches
matches = re.findall('\d+', 'Smoothie ingredients: 3 bananas and 2 strawberries')

# Print the matches
print(matches)

print(re.escape("This is Awseome even 1 AM"))

org_string = "This is a sample string"
pattern = r's'
# Replace all occurrences of character s with an empty string
mod_string = re.sub(pattern, '', org_string )
print(mod_string)

org_string = "This is a sample string"
pattern = r'[sai]'
# Remove characters 's', 'a' and 'i' from a string
mod_string = re.sub(pattern, '', org_string)
print(mod_string)

# Upon matching, '$' is replaced by '' .
pattern=r'[a-zA-Z]'
result=re.sub(pattern, '' ,'this is tupple (45,41) pleas write.')
result

import pandas as pd

df = pd.DataFrame(['$40,000*','$40000 conditions attached','$7841','$89562','$21315$'], columns=['Price'])
print(df)

df['Price'].str.replace(r'\D+', '').astype('int')

def clean_text(text):
    text = re.sub(r"\D+",'',text)
    return text
df['Price'].apply(clean_text).astype('int64')

list_=['New England Hemophilia Association (NEHA)',
 'Los Gatos Education Foundation (LGEF)',
'#Fly',
'#GivingTuesday',
'See Ya Later',
 'Foundation Inc (SYL)',
'1 Million 4 Anna Foundation']
import pandas as pd
df=pd.DataFrame()
df['str']=list_
df

def clean_text(text):
    text = text.lower()
    text = re.sub(r"i'm","i am",text)
    text = re.sub(r"she's","she is",text)
    text = re.sub(r"can't","can not",text)
    text = re.sub(r"\x1a","",text)
    text = re.sub("[()]","",text)
    text = re.sub(r"","",text)
    text = re.sub(r"�","",text)
    result = re.sub(r"[(a-z)]", "",text)
    text = re.sub(r"[-()\"#/@;:<>{}=~|.?,]", "", text)
    return text

df['str']=df['str'].apply(clean_text)
df

#
import re
txt = "The rain in Spain"
x = re.split("\s", txt)
print(x)

txt = "The rain in Spain"
x = re.sub("\s", "_", txt)
print(x)

text = "The film Titanic was released in 1998"
result = re.findall(r".*", text)
result

result = re.findall(r".+", text)
result

text = "1998 was the year when the film titanic was released"
if re.search(r"^1998", text):
    print("Match found")
else:
    print("Match not found")

text = "1998 was the year when the film titanic was released"
if re.search(r"1998$", text):
    print("Match found")
else:
    print("Match not found")

text = "The film Pulp Fiction was released in year 1994"
result = re.sub(r"[a-z]", "X", text)
print(result)

#You can group multiple patterns to match or substitute in a string using the square bracket. 
text = "The film, '@Pulp Fiction' was ? released _ in % $ year 1994."
result = re.sub(r"[,@\'?\.$%_]", "", text, flags=re.I)
print(result)

# Removing Multiple Spaces
text = "The film      Pulp Fiction      was released in   year 1994."
result = re.sub(r"\s+"," ", text, flags = re.I)
print(result)

# Removing Spaces from Start and End
text = "         The film Pulp Fiction was released in year 1994"
result = re.sub(r"^\s+", "", text)
print(result)

text = "The film Pulp Fiction was released in year 1994      "
result = re.sub(r"\s+$", "", text)
print(result)



text = "The film Pulp Fiction     s was b released in year 1994"
result = re.sub(r"\s+[a-zA-Z]\s+", " ", text)
print(result)

text = "The film, Pulp Fiction, was released in year 1994"
result = re.split(r"\,", text)
print(result)

import re
text = "This is comany name (vishal)"
result = re.sub(r"\(.*?\)", "", text)
print(result)

text = "This is comany name (vishal)"
result = re.findall(r"\(.*?\)", text)
print(result)

text = "India((from natural collection))"
result = re.sub(r"\(\(.*?\)\)", "", text)
print(result)

text = "India[(from natural collection)]"
result = re.sub(r"\[\(.*?\)\]", "", text)
print(result)

text = "I want to buy a mobile between 200 and 400 euros"
result = re.findall(r"\d+", text)
print(result)

s = 'foo [[bar]]); baz [[quz]]); not [[foobar]]'
matches = re.findall(r'\[\[(.*?)]]', s, re.S)
matches

s = 'foo [[bar]]); baz [[quz]]); not [[foobar]]'
matches = re.findall(r'\[\[.*?\]\]',s)
matches

s = 'foo [[bar]]); baz [[quz]]); not [[foobar]]'
matches = re.findall(r'\[\[(.*?)\]\]', s)
matches